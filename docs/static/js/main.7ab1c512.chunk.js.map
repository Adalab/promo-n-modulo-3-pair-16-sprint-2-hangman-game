{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","error","setError","lastLetter","setLastLetter","word","userLetters","setUserLetters","className","split","map","index","includes","htmlFor","autoComplete","maxLength","type","name","id","onChange","ev","inputLastLetter","target","value","test","onClick","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"iNAwGeA,MArGf,WACE,MAAwBC,mBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAkCF,mBAAS,IAA3C,mBAAKG,EAAL,KAAiBC,EAAjB,KACA,EAAsBJ,mBAAS,cAA/B,mBAAKK,EAAL,KACA,GADA,KACoCL,mBAAS,KAA7C,mBAAKM,EAAL,KAAkBC,EAAlB,KAmCA,OACE,8BACE,sBAAKC,UAAU,OAAf,UACE,iCACE,oBAAIA,UAAU,gBAAd,kCAEF,uBAAMA,UAAU,OAAhB,UACE,oCACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,oBAAIA,UAAU,UAAd,SApBUH,EAAKI,MAAM,IACVC,KAAI,SAACL,EAAKM,GAC3B,OAAGL,EAAYM,SAASP,GACd,oBAAIG,UAAU,SAAd,SAAoCH,GAARM,GAE5B,oBAAIH,UAAU,UAAcG,WAiBlC,sBAAKH,UAAU,WAAf,UACE,oBAAIA,UAAU,QAAd,8BACA,qBAAIA,UAAU,UAAd,UACE,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,eACA,oBAAIA,UAAU,SAAd,qBAGJ,uBAAMA,UAAU,OAAhB,UACE,uBAAOA,UAAU,QAAQK,QAAQ,cAAjC,gCAGA,uBACEC,aAAa,MACbN,UAAU,cACVO,UAAU,IACVC,KAAK,OACLC,KAAK,cACLC,GAAG,cACHC,SAzDS,SAACC,GACtB,IAAMC,EAAkBD,EAAGE,OAAOC,MAC9B,qEAA2BC,KAAKH,IAClCjB,EAAciB,GACVf,EAAYM,SAASS,IACvBd,EAAe,GAAD,mBAAKD,GAAL,CAAiBe,MAGjCjB,EAAc,KAkDJmB,MAAOpB,IAET,wBAAQK,UAAU,MAAMiB,QAnEf,SAACL,GACpBA,EAAGM,iBAEHxB,EADiBD,EAAQ,IAiEf,+BAKJ,0BAASO,UAAS,sBAAiBP,GAAnC,UACE,sBAAMO,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,kBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,iBAChB,sBAAMA,UAAU,6BC5F5BmB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7ab1c512.chunk.js","sourcesContent":["import \"../styles/main.scss\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  let [error, setError] = useState(0);\n  let [lastLetter, setLastLetter] = useState([]);\n  let [word, setWord] = useState(\"katakroker\");\n  let [userLetters, setUserLetters] = useState([]);\n\n  //Funcion numero de errores\n\n  let numberOfErrors = (ev) => {\n    ev.preventDefault();\n    let countError = error + 1;\n    setError(countError);\n  };\n\n  //funcion last letter\n  let handleLastLetter = (ev) => {\n    const inputLastLetter = ev.target.value;\n    if (/^[A-Za-zÑñÁáÉéÍíÓóÚúÜü]$/.test(inputLastLetter)) {\n      setLastLetter(inputLastLetter);\n      if(!userLetters.includes(inputLastLetter)){\n        setUserLetters([...userLetters,inputLastLetter]);\n      }\n    } else {\n      setLastLetter(\"\");\n    }\n    \n  };\n\n  let renderSolutionLetters = () =>{\n    const wordLetters = word.split('');\n      return wordLetters.map((word,index) => {\n        if(userLetters.includes(word)){\n          return (<li className=\"letter\" key={index}>{word}</li>)\n        }else{\n          return (<li className=\"letter\" key={index}></li>)\n        }\n      })\n  }\n  \n  return (\n    <div>\n      <div className=\"page\">\n        <header>\n          <h1 className=\"header__title\">Juego del ahorcado</h1>\n        </header>\n        <main className=\"main\">\n          <section>\n            <div className=\"solution\">\n              <h2 className=\"title\">Solución:</h2>\n              <ul className=\"letters\">{renderSolutionLetters()}</ul>\n            </div>\n            <div className=\"feedback\">\n              <h2 className=\"title\">Letras falladas:</h2>\n              <ul className=\"letters\">\n                <li className=\"letter\">f</li>\n                <li className=\"letter\">q</li>\n                <li className=\"letter\">h</li>\n                <li className=\"letter\">p</li>\n                <li className=\"letter\">x</li>\n              </ul>\n            </div>\n            <form className=\"form\">\n              <label className=\"title\" htmlFor=\"last-letter\">\n                Escribe una letra:\n              </label>\n              <input\n                autoComplete=\"off\"\n                className=\"form__input\"\n                maxLength=\"1\"\n                type=\"text\"\n                name=\"last-letter\"\n                id=\"last-letter\"\n                onChange={handleLastLetter}\n                value={lastLetter}\n              />\n              <button className=\"btn\" onClick={numberOfErrors}>\n                incrementar\n              </button>\n            </form>\n          </section>\n          <section className={`dummy error-${error}`}>\n            <span className=\"error-13 eye\"></span>\n            <span className=\"error-12 eye\"></span>\n            <span className=\"error-11 line\"></span>\n            <span className=\"error-10 line\"></span>\n            <span className=\"error-9 line\"></span>\n            <span className=\"error-8 line\"></span>\n            <span className=\"error-7 line\"></span>\n            <span className=\"error-6 head\"></span>\n            <span className=\"error-5 line\"></span>\n            <span className=\"error-4 line\"></span>\n            <span className=\"error-3 line\"></span>\n            <span className=\"error-2 line\"></span>\n            <span className=\"error-1 line\"></span>\n          </section>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}